/**
 * Floating responsive layout .deck --> .unit-* --> .deck --> ...
 *
 * With .padded and .vfill (.deck and .unit-* have no height by default) as spacing helpers.
 *
 * Note: .deck is not position:relative, .unit-* are.
 *
 * @author Patrick Zhu, Tim Lauv
 * @created 2017.01.11
 */

.deck {
	//always give width 100% to deck and clearfix (use .vfill for auto height)
	width: 100%;
	.clearfix();

	.box-sizing();
	.paddable();
	.vfillable();

	[class^="unit-"]{
		float: left;
	}

	.unit-1 {
		.unit-base();
		@media (min-width: @screen-watch-min) {
			width: 100%;
		}
		@media (min-width: @screen-phone-min) {
			width: 50%;
		}
		@media (min-width: @screen-tablet-min) {
			width: 25%;
		}
		@media (min-width: @screen-pc-min) {
			width: 12.5%;
		}
	}

	.unit-2 {
		.unit-base();
		@media (min-width: @screen-watch-min) {
			width: 100%;
		}
		@media (min-width: @screen-phone-min) {
			width: 100%;
		}
		@media (min-width: @screen-tablet-min) {
			width: 50%;
		}
		@media (min-width: @screen-pc-min) {
			width: 25%;
		}
	}

	.unit-3 {
		.unit-base();
		@media (min-width: @screen-watch-min) {
			width: 100%;
		}
		@media (min-width: @screen-phone-min) {
			width: 100%;
		}
		@media (min-width: @screen-tablet-min) {
			width: 75%;
		}
		@media (min-width: @screen-pc-min) {
			width: 37.5%;
		}
	}

	.unit-4 {
		.unit-base();
		@media (min-width: @screen-watch-min) {
			width: 100%;
		}
		@media (min-width: @screen-phone-min) {
			width: 100%;
		}
		@media (min-width: @screen-tablet-min) {
			width: 100%;
		}
		@media (min-width: @screen-pc-min) {
			width: 50%;
		}
	}

	.unit-5 {
		.unit-base();
		@media (min-width: @screen-watch-min) {
			width: 100%;
		}
		@media (min-width: @screen-phone-min) {
			width: 100%;
		}
		@media (min-width: @screen-tablet-min) {
			width: 100%;
		}
		@media (min-width: @screen-pc-min) {
			width: 62.5%;
		}
	}

	.unit-6 {
		.unit-base();
		@media (min-width: @screen-watch-min) {
			width: 100%;
		}
		@media (min-width: @screen-phone-min) {
			width: 100%;
		}
		@media (min-width: @screen-tablet-min) {
			width: 100%;
		}
		@media (min-width: @screen-pc-min) {
			width: 75%;
		}
	}

	.unit-7 {
		.unit-base();
		@media (min-width: @screen-watch-min) {
			width: 100%;
		}
		@media (min-width: @screen-phone-min) {
			width: 100%;
		}
		@media (min-width: @screen-tablet-min) {
			width: 100%;
		}
		@media (min-width: @screen-pc-min) {
			width: 87.5%;
		}
	}

	.unit-8 {
		.unit-base();
		@media (min-width: @screen-watch-min) {
			width: 100%;
		}
		@media (min-width: @screen-phone-min) {
			width: 100%;
		}
		@media (min-width: @screen-tablet-min) {
			width: 100%;
		}
		@media (min-width: @screen-pc-min) {
			width: 100%;
		}
	}
}

//float el container (clearfix)
.clearfix() {
    overflow: auto;
    zoom: 1;
    /*
	 * Clearfix: contain floats (from h5bp:helpers)
	 *
	 * For modern browsers
	 * 1. The space content is one way to avoid an Opera bug when the
	 *    `contenteditable` attribute is included anywhere else in the document.
	 *    Otherwise it causes space to appear at the top and bottom of elements
	 *    that receive the `clearfix` class.
	 * 2. The use of `table` rather than `block` is only necessary if using
	 *    `:before` to contain the top-margins of child elements.
	 */
    
    &:before, &:after {
        content: " ";
        /* 1 */
        
        display: table;
        /* 2 */
    }
    &:after {
        clear: both;
    }
}